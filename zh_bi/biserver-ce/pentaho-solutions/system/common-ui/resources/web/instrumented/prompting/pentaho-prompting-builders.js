/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['prompting/pentaho-prompting-builders.js']) {
  _$jscoverage['prompting/pentaho-prompting-builders.js'] = [];
  _$jscoverage['prompting/pentaho-prompting-builders.js'][27] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][31] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][32] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][33] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][34] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][36] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][38] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][39] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][46] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][49] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][53] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][78] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][79] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][83] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][84] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][85] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][86] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][87] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][89] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][90] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][93] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][97] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][98] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][99] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][100] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][103] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][107] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][109] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][111] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][124] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][126] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][127] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][141] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][143] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][144] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][153] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][154] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][155] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][156] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][163] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][165] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][166] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][167] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][168] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][173] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][175] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][176] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][180] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][182] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][183] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][184] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][185] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][186] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][190] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][192] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][193] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][199] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][201] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][202] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][203] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][205] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][209] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][210] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][217] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][219] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][221] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][224] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][227] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][233] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][239] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][241] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][242] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][249] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][255] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][257] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][258] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][263] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][266] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][272] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][274] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][275] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][282] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][284] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][285] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][286] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][290] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][292] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][293] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][294] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][298] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][300] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][302] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][312] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][314] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][316] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][324] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][326] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][328] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][330] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][332] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][337] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][338] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][340] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][352] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][354] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][355] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][356] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][367] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][369] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][370] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][371] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][372] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][373] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][375] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][376] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][382] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][383] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][392] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][394] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][395] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][408] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][410] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][419] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][420] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][421] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][423] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][424] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][427] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][429] = 0;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][431] = 0;
}
_$jscoverage['prompting/pentaho-prompting-builders.js'].source = ["<span class=\"c\">/**</span>","","<span class=\"c\">To create a widget:</span>","<span class=\"c\">var widget = pentaho.common.prompting.builders.WidgetBuilder.build(arguments);</span>","","<span class=\"c\">where arguments generally contain:</span>","","<span class=\"c\">{</span>","<span class=\"c\">  promptPanel: ...,</span>","<span class=\"c\">  param: the parameter this widget is created for</span>","<span class=\"c\">}</span>","","<span class=\"c\">Widget Definition Structure:</span>","<span class=\"c\">{</span>","<span class=\"c\">  promptPanel: the prompt panel this widget belongs to</span>","<span class=\"c\">  promptType: ['prompt', 'submit', 'label'], Used to distinguish types of widgets</span>","<span class=\"c\">  param: The parameter this widget was created for</span>","<span class=\"c\">  name: unique name of widget, usually: param['name'] + GUID</span>","<span class=\"c\">  htmlObject: name of object to inject this widget at</span>","<span class=\"c\">  type: CDF Component type</span>","","<span class=\"c\">  *All other properties are subject of the widget type*</span>","<span class=\"c\">}</span>","","<span class=\"c\">*/</span>","","pen<span class=\"k\">.</span>define<span class=\"k\">([</span><span class=\"s\">'cdf/cdf-module'</span><span class=\"k\">,</span> <span class=\"s\">'common-ui/prompting/pentaho-prompting-bind'</span><span class=\"k\">],</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","  <span class=\"c\">// TODO Refactor so we're not using global objects. This requires an</span>","  <span class=\"c\">// update to doc for any custom components in addition to code here</span>","  <span class=\"c\">// and anywhere else prompting is used.</span>","  pentaho <span class=\"k\">=</span> <span class=\"k\">typeof</span> pentaho <span class=\"k\">==</span> <span class=\"s\">\"undefined\"</span> <span class=\"k\">?</span> <span class=\"k\">{}</span> <span class=\"k\">:</span> pentaho<span class=\"k\">;</span>","  pentaho<span class=\"k\">.</span>common <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>common <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","  pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>prompting <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>prompting <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","  pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>prompting<span class=\"k\">.</span>builders <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>prompting<span class=\"k\">.</span>builders <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","","  pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>prompting<span class=\"k\">.</span>builders<span class=\"k\">.</span>PromptPanelBuilder <span class=\"k\">=</span> Base<span class=\"k\">.</span>extend<span class=\"k\">(</span><span class=\"k\">{</span>","    build<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>promptPanel<span class=\"k\">)</span> <span class=\"k\">{</span>","      <span class=\"k\">var</span> name <span class=\"k\">=</span> <span class=\"s\">'prompt'</span> <span class=\"k\">+</span> promptPanel<span class=\"k\">.</span>guid<span class=\"k\">;</span>","      <span class=\"k\">var</span> layout <span class=\"k\">=</span> <span class=\"k\">{</span>","        name<span class=\"k\">:</span> name<span class=\"k\">,</span>","        type<span class=\"k\">:</span> <span class=\"s\">'ScrollingPromptPanelLayoutComponent'</span><span class=\"k\">,</span>","        htmlObject<span class=\"k\">:</span>  promptPanel<span class=\"k\">.</span>destinationId<span class=\"k\">,</span>","        promptPanel<span class=\"k\">:</span> promptPanel<span class=\"k\">,</span>","        components<span class=\"k\">:</span>  promptPanel<span class=\"k\">.</span>buildPanelComponents<span class=\"k\">(),</span>","        postExecution<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","          promptPanel<span class=\"k\">.</span>_ready<span class=\"k\">();</span>","        <span class=\"k\">}</span>","      <span class=\"k\">}</span><span class=\"k\">;</span>","      <span class=\"k\">return</span> layout<span class=\"k\">;</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">);</span>","","  pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>prompting<span class=\"k\">.</span>builders<span class=\"k\">.</span>WidgetBuilder <span class=\"k\">=</span> <span class=\"k\">{</span>","    mapping<span class=\"k\">:</span> <span class=\"k\">{</span>","      <span class=\"s\">'prompt-panel'</span><span class=\"k\">:</span> <span class=\"s\">'pentaho.common.prompting.builders.PromptPanelBuilder'</span><span class=\"k\">,</span>","      <span class=\"s\">'group-panel'</span><span class=\"k\">:</span> <span class=\"s\">'pentaho.common.prompting.builders.ParameterGroupPanelBuilder'</span><span class=\"k\">,</span>","      <span class=\"s\">'parameter-panel'</span><span class=\"k\">:</span> <span class=\"s\">'pentaho.common.prompting.builders.ParameterPanelBuilder'</span><span class=\"k\">,</span>","      <span class=\"s\">'submit-panel'</span><span class=\"k\">:</span> <span class=\"s\">'pentaho.common.prompting.builders.SubmitPanelBuilder'</span><span class=\"k\">,</span>","      <span class=\"s\">'submit'</span><span class=\"k\">:</span> <span class=\"s\">'pentaho.common.prompting.builders.SubmitComponentBuilder'</span><span class=\"k\">,</span>","      <span class=\"s\">'label'</span><span class=\"k\">:</span> <span class=\"s\">'pentaho.common.prompting.builders.LabelBuilder'</span><span class=\"k\">,</span>","      <span class=\"s\">'error-label'</span><span class=\"k\">:</span> <span class=\"s\">'pentaho.common.prompting.builders.ErrorLabelBuilder'</span><span class=\"k\">,</span>","      <span class=\"s\">'dropdown'</span><span class=\"k\">:</span> <span class=\"s\">'pentaho.common.prompting.builders.DropDownBuilder'</span><span class=\"k\">,</span>","      <span class=\"s\">'radio'</span><span class=\"k\">:</span> <span class=\"s\">'pentaho.common.prompting.builders.RadioBuilder'</span><span class=\"k\">,</span>","      <span class=\"s\">'checkbox'</span><span class=\"k\">:</span> <span class=\"s\">'pentaho.common.prompting.builders.CheckBuilder'</span><span class=\"k\">,</span>","      <span class=\"s\">'togglebutton'</span><span class=\"k\">:</span> <span class=\"s\">'pentaho.common.prompting.builders.MultiButtonBuilder'</span><span class=\"k\">,</span>","      <span class=\"s\">'list'</span><span class=\"k\">:</span> <span class=\"s\">'pentaho.common.prompting.builders.ListBuilder'</span><span class=\"k\">,</span>","      <span class=\"s\">'datepicker'</span><span class=\"k\">:</span> <span class=\"s\">'pentaho.common.prompting.builders.DateInputBuilder'</span><span class=\"k\">,</span>","      <span class=\"s\">'filebrowser'</span><span class=\"k\">:</span> <span class=\"s\">'pentaho.common.prompting.builders.ExternalInputBuilder'</span><span class=\"k\">,</span>","      <span class=\"s\">'external-input'</span><span class=\"k\">:</span> <span class=\"s\">'pentaho.common.prompting.builders.ExternalInputBuilder'</span><span class=\"k\">,</span>","      <span class=\"s\">'multi-line'</span><span class=\"k\">:</span> <span class=\"s\">'pentaho.common.prompting.builders.TextAreaBuilder'</span><span class=\"k\">,</span>","      <span class=\"s\">'gc'</span><span class=\"k\">:</span> <span class=\"s\">'pentaho.common.prompting.builders.GarbageCollectorBuilder'</span><span class=\"k\">,</span>","      <span class=\"s\">'default'</span><span class=\"k\">:</span> <span class=\"s\">'pentaho.common.prompting.builders.PlainPromptBuilder'</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    cache<span class=\"k\">:</span> <span class=\"k\">{}</span><span class=\"k\">,</span> <span class=\"c\">// Cache of created builders</span>","","    findBuilderFor<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>args<span class=\"k\">,</span> type<span class=\"k\">)</span> <span class=\"k\">{</span>","      type <span class=\"k\">=</span> type <span class=\"k\">||</span> <span class=\"k\">(</span>args<span class=\"k\">.</span>param <span class=\"k\">&amp;&amp;</span> args<span class=\"k\">.</span>param<span class=\"k\">.</span>attributes <span class=\"k\">?</span> args<span class=\"k\">.</span>param<span class=\"k\">.</span>attributes<span class=\"k\">[</span><span class=\"s\">'parameter-render-type'</span><span class=\"k\">]</span> <span class=\"k\">:</span> <span class=\"k\">null</span><span class=\"k\">);</span>","      <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>createBuilder<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>mapping<span class=\"k\">[</span>type<span class=\"k\">]</span> <span class=\"k\">||</span> <span class=\"k\">this</span><span class=\"k\">.</span>mapping<span class=\"k\">[</span><span class=\"s\">'default'</span><span class=\"k\">]);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    createBuilder<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>name<span class=\"k\">)</span> <span class=\"k\">{</span>","      <span class=\"k\">var</span> builder <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>cache<span class=\"k\">[</span>name<span class=\"k\">];</span>","      <span class=\"k\">if</span> <span class=\"k\">(!</span>builder<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">try</span> <span class=\"k\">{</span>","          builder <span class=\"k\">=</span> eval<span class=\"k\">(</span><span class=\"s\">'new '</span> <span class=\"k\">+</span> name <span class=\"k\">+</span> <span class=\"s\">'()'</span><span class=\"k\">);</span>","          <span class=\"k\">this</span><span class=\"k\">.</span>cache<span class=\"k\">[</span>name<span class=\"k\">]</span> <span class=\"k\">=</span> builder<span class=\"k\">;</span>","        <span class=\"k\">}</span> <span class=\"k\">catch</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","          <span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">typeof</span> console <span class=\"k\">!==</span> <span class=\"s\">'undefined'</span> <span class=\"k\">&amp;&amp;</span> console<span class=\"k\">.</span>log<span class=\"k\">)</span> <span class=\"k\">{</span> console<span class=\"k\">.</span>log<span class=\"k\">(</span><span class=\"s\">'Unable to create widget builder of type \"'</span> <span class=\"k\">+</span> name <span class=\"k\">+</span> <span class=\"s\">'\"'</span><span class=\"k\">);</span> <span class=\"k\">}</span>","          <span class=\"k\">throw</span> e<span class=\"k\">;</span>","        <span class=\"k\">}</span>","      <span class=\"k\">}</span>","      <span class=\"k\">return</span> builder<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    build<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>args<span class=\"k\">,</span> typeOverride<span class=\"k\">)</span> <span class=\"k\">{</span>","      <span class=\"k\">var</span> widget <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>findBuilderFor<span class=\"k\">(</span>args<span class=\"k\">,</span> typeOverride<span class=\"k\">).</span>build<span class=\"k\">(</span>args<span class=\"k\">);</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span>widget<span class=\"k\">.</span>parameter <span class=\"k\">&amp;&amp;</span> widget<span class=\"k\">.</span>param<span class=\"k\">)</span> <span class=\"k\">{</span>","        widget<span class=\"k\">.</span>postChange <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","          args<span class=\"k\">.</span>promptPanel<span class=\"k\">.</span>parameterChanged<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>param<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>parameter<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>getValue<span class=\"k\">());</span>","        <span class=\"k\">}</span><span class=\"k\">.</span>bind<span class=\"k\">(</span>widget<span class=\"k\">);</span>","      <span class=\"k\">}</span>","      <span class=\"k\">return</span> widget<span class=\"k\">;</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">;</span>","","  pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>prompting<span class=\"k\">.</span>builders<span class=\"k\">.</span>SubmitPanelBuilder <span class=\"k\">=</span> Base<span class=\"k\">.</span>extend<span class=\"k\">(</span><span class=\"k\">{</span>","    build<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>args<span class=\"k\">)</span> <span class=\"k\">{</span>","      <span class=\"k\">var</span> guid <span class=\"k\">=</span> args<span class=\"k\">.</span>promptPanel<span class=\"k\">.</span>generateWidgetGUID<span class=\"k\">();</span>","","      <span class=\"k\">return</span> <span class=\"k\">{</span>","        type<span class=\"k\">:</span> <span class=\"s\">'FlowPromptLayoutComponent'</span><span class=\"k\">,</span>","        promptType<span class=\"k\">:</span> <span class=\"s\">'submit'</span><span class=\"k\">,</span>","        name<span class=\"k\">:</span> guid<span class=\"k\">,</span>","        htmlObject<span class=\"k\">:</span> guid<span class=\"k\">,</span>","        executeAtStart<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","        components<span class=\"k\">:</span> <span class=\"k\">[</span>","          pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>prompting<span class=\"k\">.</span>builders<span class=\"k\">.</span>WidgetBuilder<span class=\"k\">.</span>build<span class=\"k\">(</span>args<span class=\"k\">,</span> <span class=\"s\">'submit'</span><span class=\"k\">)</span>","        <span class=\"k\">]</span>","      <span class=\"k\">}</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">);</span>","","  pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>prompting<span class=\"k\">.</span>builders<span class=\"k\">.</span>SubmitComponentBuilder <span class=\"k\">=</span> Base<span class=\"k\">.</span>extend<span class=\"k\">(</span><span class=\"k\">{</span>","    build<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>args<span class=\"k\">)</span> <span class=\"k\">{</span>","      <span class=\"k\">var</span> guid <span class=\"k\">=</span> args<span class=\"k\">.</span>promptPanel<span class=\"k\">.</span>generateWidgetGUID<span class=\"k\">();</span>","      <span class=\"k\">return</span> <span class=\"k\">{</span>","        promptType<span class=\"k\">:</span> <span class=\"s\">'submit'</span><span class=\"k\">,</span>","        type<span class=\"k\">:</span> <span class=\"s\">'SubmitPromptComponent'</span><span class=\"k\">,</span>","        name<span class=\"k\">:</span> guid<span class=\"k\">,</span>","        htmlObject<span class=\"k\">:</span> guid<span class=\"k\">,</span>","        label<span class=\"k\">:</span> args<span class=\"k\">.</span>promptPanel<span class=\"k\">.</span>getString<span class=\"k\">(</span><span class=\"s\">'submitButtonLabel'</span><span class=\"k\">,</span> <span class=\"s\">'Submit'</span><span class=\"k\">),</span>","        autoSubmitLabel<span class=\"k\">:</span> args<span class=\"k\">.</span>promptPanel<span class=\"k\">.</span>getString<span class=\"k\">(</span><span class=\"s\">'autoSubmitLabel'</span><span class=\"k\">,</span> <span class=\"s\">'Auto-Submit'</span><span class=\"k\">),</span>","        promptPanel<span class=\"k\">:</span> args<span class=\"k\">.</span>promptPanel<span class=\"k\">,</span>","        paramDefn<span class=\"k\">:</span> args<span class=\"k\">.</span>promptPanel<span class=\"k\">.</span>paramDefn<span class=\"k\">,</span>","        executeAtStart<span class=\"k\">:</span> <span class=\"k\">true</span>","      <span class=\"k\">}</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">);</span>","","  pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>prompting<span class=\"k\">.</span>builders<span class=\"k\">.</span>ParameterWidgetBuilderBase <span class=\"k\">=</span> Base<span class=\"k\">.</span>extend<span class=\"k\">(</span><span class=\"k\">{</span>","    build<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>args<span class=\"k\">)</span> <span class=\"k\">{</span>","      <span class=\"k\">var</span> guid <span class=\"k\">=</span> args<span class=\"k\">.</span>promptPanel<span class=\"k\">.</span>generateWidgetGUID<span class=\"k\">();</span>","      <span class=\"k\">return</span> <span class=\"k\">{</span>","        promptType<span class=\"k\">:</span> <span class=\"s\">'prompt'</span><span class=\"k\">,</span>","        executeAtStart<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","        param<span class=\"k\">:</span> args<span class=\"k\">.</span>param<span class=\"k\">,</span>","        name<span class=\"k\">:</span> guid<span class=\"k\">,</span>","        htmlObject<span class=\"k\">:</span> guid<span class=\"k\">,</span>","        type<span class=\"k\">:</span> undefined<span class=\"k\">,</span> <span class=\"c\">// must be declared in extension class</span>","        parameter<span class=\"k\">:</span> args<span class=\"k\">.</span>promptPanel<span class=\"k\">.</span>getParameterName<span class=\"k\">(</span>args<span class=\"k\">.</span>param<span class=\"k\">),</span>","        postExecution<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","          <span class=\"k\">this</span><span class=\"k\">.</span>base<span class=\"k\">();</span>","          <span class=\"k\">var</span> tooltip <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>param<span class=\"k\">.</span>attributes<span class=\"k\">[</span><span class=\"s\">'tooltip'</span><span class=\"k\">];</span>","          <span class=\"k\">if</span> <span class=\"k\">(</span>tooltip<span class=\"k\">)</span> <span class=\"k\">{</span>","            $<span class=\"k\">(</span><span class=\"s\">'#'</span> <span class=\"k\">+</span> <span class=\"k\">this</span><span class=\"k\">.</span>htmlObject<span class=\"k\">).</span>attr<span class=\"k\">(</span><span class=\"s\">'title'</span><span class=\"k\">,</span> tooltip<span class=\"k\">);</span>","          <span class=\"k\">}</span>","        <span class=\"k\">}</span>","      <span class=\"k\">}</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">);</span>","","  pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>prompting<span class=\"k\">.</span>builders<span class=\"k\">.</span>LabelBuilder <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>prompting<span class=\"k\">.</span>builders<span class=\"k\">.</span>ParameterWidgetBuilderBase<span class=\"k\">.</span>extend<span class=\"k\">(</span><span class=\"k\">{</span>","    build<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>args<span class=\"k\">)</span> <span class=\"k\">{</span>","      <span class=\"k\">var</span> widget <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>base<span class=\"k\">(</span>args<span class=\"k\">);</span>","      <span class=\"k\">var</span> name <span class=\"k\">=</span> widget<span class=\"k\">.</span>name <span class=\"k\">+</span> <span class=\"s\">'-label'</span><span class=\"k\">;</span>","      <span class=\"k\">var</span> label <span class=\"k\">=</span> Dashboards<span class=\"k\">.</span>escapeHtml<span class=\"k\">(</span>args<span class=\"k\">.</span>param<span class=\"k\">.</span>attributes<span class=\"k\">[</span><span class=\"s\">'label'</span><span class=\"k\">]</span> <span class=\"k\">||</span> args<span class=\"k\">.</span>param<span class=\"k\">.</span>name<span class=\"k\">);</span>","      $<span class=\"k\">.</span>extend<span class=\"k\">(</span>widget<span class=\"k\">,</span> <span class=\"k\">{</span>","        promptType<span class=\"k\">:</span> <span class=\"s\">'label'</span><span class=\"k\">,</span>","        name<span class=\"k\">:</span> name<span class=\"k\">,</span>","        htmlObject<span class=\"k\">:</span> name<span class=\"k\">,</span>","        type<span class=\"k\">:</span> <span class=\"s\">'TextComponent'</span><span class=\"k\">,</span>","        expression<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span> <span class=\"k\">return</span> label<span class=\"k\">;</span> <span class=\"k\">}</span>","      <span class=\"k\">}</span><span class=\"k\">);</span>","      <span class=\"k\">delete</span> widget<span class=\"k\">.</span>parameter<span class=\"k\">;</span> <span class=\"c\">// labels don't have parameters</span>","      <span class=\"k\">return</span> widget<span class=\"k\">;</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">);</span>","","  pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>prompting<span class=\"k\">.</span>builders<span class=\"k\">.</span>ErrorLabelBuilder <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>prompting<span class=\"k\">.</span>builders<span class=\"k\">.</span>LabelBuilder<span class=\"k\">.</span>extend<span class=\"k\">(</span><span class=\"k\">{</span>","    build<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>args<span class=\"k\">)</span> <span class=\"k\">{</span>","      <span class=\"k\">var</span> widget <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>base<span class=\"k\">(</span>args<span class=\"k\">);</span>","      <span class=\"k\">var</span> label <span class=\"k\">=</span> args<span class=\"k\">.</span>errorMessage<span class=\"k\">;</span>","      widget<span class=\"k\">.</span>isErrorIndicator <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","      widget<span class=\"k\">.</span>expression <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span> <span class=\"k\">return</span> label<span class=\"k\">;</span> <span class=\"k\">}</span><span class=\"k\">;</span>","      <span class=\"k\">return</span> widget<span class=\"k\">;</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">);</span>","","  pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>prompting<span class=\"k\">.</span>builders<span class=\"k\">.</span>TextInputBuilder <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>prompting<span class=\"k\">.</span>builders<span class=\"k\">.</span>ParameterWidgetBuilderBase<span class=\"k\">.</span>extend<span class=\"k\">(</span><span class=\"k\">{</span>","    build<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>args<span class=\"k\">)</span> <span class=\"k\">{</span>","      <span class=\"k\">var</span> widget <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>base<span class=\"k\">(</span>args<span class=\"k\">);</span>","      <span class=\"k\">return</span> $<span class=\"k\">.</span>extend<span class=\"k\">(</span>widget<span class=\"k\">,</span> <span class=\"k\">{</span>","        type<span class=\"k\">:</span> <span class=\"s\">'TextInputComponent'</span>","      <span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">);</span>","","  pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>prompting<span class=\"k\">.</span>builders<span class=\"k\">.</span>ValueBasedParameterWidgetBuilder <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>prompting<span class=\"k\">.</span>builders<span class=\"k\">.</span>ParameterWidgetBuilderBase<span class=\"k\">.</span>extend<span class=\"k\">(</span><span class=\"k\">{</span>","    getCDFValuesArray<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>param<span class=\"k\">)</span> <span class=\"k\">{</span>","      <span class=\"k\">var</span> valuesArray <span class=\"k\">=</span> <span class=\"k\">[];</span>","      $<span class=\"k\">.</span>each<span class=\"k\">(</span>param<span class=\"k\">.</span>values<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>i<span class=\"k\">,</span> val<span class=\"k\">)</span> <span class=\"k\">{</span>","        valuesArray<span class=\"k\">.</span>push<span class=\"k\">([</span>val<span class=\"k\">.</span>value<span class=\"k\">,</span> val<span class=\"k\">.</span>label<span class=\"k\">]);</span>","      <span class=\"k\">}</span><span class=\"k\">);</span>","      <span class=\"k\">return</span> valuesArray<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    build<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>args<span class=\"k\">)</span> <span class=\"k\">{</span>","      <span class=\"k\">var</span> widget <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>base<span class=\"k\">(</span>args<span class=\"k\">);</span>","      <span class=\"k\">return</span> $<span class=\"k\">.</span>extend<span class=\"k\">(</span>widget<span class=\"k\">,</span> <span class=\"k\">{</span>","        valueAsId<span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span>","        valuesArray<span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>getCDFValuesArray<span class=\"k\">(</span>args<span class=\"k\">.</span>param<span class=\"k\">)</span>","      <span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">);</span>","","  pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>prompting<span class=\"k\">.</span>builders<span class=\"k\">.</span>DropDownBuilder <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>prompting<span class=\"k\">.</span>builders<span class=\"k\">.</span>ValueBasedParameterWidgetBuilder<span class=\"k\">.</span>extend<span class=\"k\">(</span><span class=\"k\">{</span>","    build<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>args<span class=\"k\">)</span> <span class=\"k\">{</span>","      <span class=\"k\">var</span> widget <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>base<span class=\"k\">(</span>args<span class=\"k\">);</span>","","      <span class=\"k\">if</span> <span class=\"k\">(</span>args<span class=\"k\">.</span>promptPanel<span class=\"k\">.</span>paramDefn<span class=\"k\">.</span>ignoreBiServer5538 <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>args<span class=\"k\">.</span>param<span class=\"k\">.</span>hasSelection<span class=\"k\">())</span> <span class=\"k\">{</span>","        <span class=\"c\">// If there is no empty selection, and no value is selected, create one. This way, we can represent</span>","        <span class=\"c\">// the unselected state.</span>","        widget<span class=\"k\">.</span>valuesArray <span class=\"k\">=</span> <span class=\"k\">[[</span><span class=\"s\">''</span><span class=\"k\">,</span> <span class=\"s\">''</span><span class=\"k\">]].</span>concat<span class=\"k\">(</span>widget<span class=\"k\">.</span>valuesArray<span class=\"k\">);</span>","      <span class=\"k\">}</span>","","      <span class=\"k\">return</span> $<span class=\"k\">.</span>extend<span class=\"k\">(</span>widget<span class=\"k\">,</span> <span class=\"k\">{</span>","        type<span class=\"k\">:</span> <span class=\"s\">'SelectComponent'</span><span class=\"k\">,</span>","        preExecution<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","          <span class=\"c\">// SelectComponent defines defaultIfEmpty = true for non-multi selects.</span>","          <span class=\"c\">// We can't override any properties of the component so we must set them just before update() is called. :(</span>","          <span class=\"c\">// Only select the first item if we have no selection and are not ignoring BISERVER-5538</span>","          <span class=\"k\">this</span><span class=\"k\">.</span>defaultIfEmpty <span class=\"k\">=</span> <span class=\"k\">!</span>args<span class=\"k\">.</span>promptPanel<span class=\"k\">.</span>paramDefn<span class=\"k\">.</span>ignoreBiServer5538 <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>args<span class=\"k\">.</span>param<span class=\"k\">.</span>hasSelection<span class=\"k\">();</span>","        <span class=\"k\">}</span>","      <span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">);</span>","","  pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>prompting<span class=\"k\">.</span>builders<span class=\"k\">.</span>ListBuilder <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>prompting<span class=\"k\">.</span>builders<span class=\"k\">.</span>ValueBasedParameterWidgetBuilder<span class=\"k\">.</span>extend<span class=\"k\">(</span><span class=\"k\">{</span>","    build<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>args<span class=\"k\">)</span> <span class=\"k\">{</span>","      <span class=\"k\">var</span> widget <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>base<span class=\"k\">(</span>args<span class=\"k\">);</span>","      <span class=\"k\">return</span> $<span class=\"k\">.</span>extend<span class=\"k\">(</span>widget<span class=\"k\">,</span> <span class=\"k\">{</span>","        type<span class=\"k\">:</span> args<span class=\"k\">.</span>param<span class=\"k\">.</span>multiSelect <span class=\"k\">?</span> <span class=\"s\">'SelectMultiComponent'</span> <span class=\"k\">:</span> <span class=\"s\">'SelectComponent'</span><span class=\"k\">,</span>","        size<span class=\"k\">:</span> args<span class=\"k\">.</span>param<span class=\"k\">.</span>attributes<span class=\"k\">[</span><span class=\"s\">'parameter-visible-items'</span><span class=\"k\">]</span> <span class=\"k\">||</span> <span class=\"s\">5</span><span class=\"k\">,</span>","        changeMode<span class=\"k\">:</span> args<span class=\"k\">.</span>param<span class=\"k\">.</span>multiSelect <span class=\"k\">?</span> <span class=\"s\">'timeout-focus'</span> <span class=\"k\">:</span> <span class=\"s\">'immediate'</span><span class=\"k\">,</span>  <span class=\"c\">// PRD-3687</span>","        preExecution<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","          <span class=\"c\">// SelectComponent defines defaultIfEmpty = true for non-multi selects.</span>","          <span class=\"c\">// We can't override any properties of the component so we must set them just before update() is called. :(</span>","          <span class=\"k\">this</span><span class=\"k\">.</span>defaultIfEmpty <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","      <span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">);</span>","","  pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>prompting<span class=\"k\">.</span>builders<span class=\"k\">.</span>MultiButtonBuilder <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>prompting<span class=\"k\">.</span>builders<span class=\"k\">.</span>ValueBasedParameterWidgetBuilder<span class=\"k\">.</span>extend<span class=\"k\">(</span><span class=\"k\">{</span>","    build<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>args<span class=\"k\">)</span> <span class=\"k\">{</span>","      <span class=\"k\">var</span> widget <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>base<span class=\"k\">(</span>args<span class=\"k\">);</span>","      <span class=\"k\">return</span> $<span class=\"k\">.</span>extend<span class=\"k\">(</span>widget<span class=\"k\">,</span> <span class=\"k\">{</span>","        type<span class=\"k\">:</span> <span class=\"s\">'MultiButtonComponent'</span><span class=\"k\">,</span>","        isMultiple<span class=\"k\">:</span> args<span class=\"k\">.</span>param<span class=\"k\">.</span>multiSelect<span class=\"k\">,</span>","        verticalOrientation<span class=\"k\">:</span> <span class=\"s\">'vertical'</span> <span class=\"k\">===</span> args<span class=\"k\">.</span>param<span class=\"k\">.</span>attributes<span class=\"k\">[</span><span class=\"s\">'parameter-layout'</span><span class=\"k\">],</span>","        expression<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","          <span class=\"k\">return</span> Dashboards<span class=\"k\">.</span>getParameterValue<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>parameter<span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        postExecution<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","          $<span class=\"k\">(</span><span class=\"s\">'#'</span> <span class=\"k\">+</span> <span class=\"k\">this</span><span class=\"k\">.</span>htmlObject<span class=\"k\">).</span>addClass<span class=\"k\">(</span><span class=\"s\">'pentaho-toggle-button-container'</span><span class=\"k\">);</span>","        <span class=\"k\">}</span>","      <span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">);</span>","","  pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>prompting<span class=\"k\">.</span>builders<span class=\"k\">.</span>ToggleButtonBaseBuilder <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>prompting<span class=\"k\">.</span>builders<span class=\"k\">.</span>ValueBasedParameterWidgetBuilder<span class=\"k\">.</span>extend<span class=\"k\">(</span><span class=\"k\">{</span>","    build<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>args<span class=\"k\">)</span> <span class=\"k\">{</span>","      <span class=\"k\">var</span> widget <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>base<span class=\"k\">(</span>args<span class=\"k\">);</span>","      <span class=\"k\">return</span> $<span class=\"k\">.</span>extend<span class=\"k\">(</span>widget<span class=\"k\">,</span> <span class=\"k\">{</span>","        defaultIfEmpty<span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span> <span class=\"c\">// Do not auto-select anything if no selection exists</span>","        verticalOrientation<span class=\"k\">:</span> <span class=\"s\">'vertical'</span> <span class=\"k\">==</span> args<span class=\"k\">.</span>param<span class=\"k\">.</span>attributes<span class=\"k\">[</span><span class=\"s\">'parameter-layout'</span><span class=\"k\">]</span>","      <span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">);</span>","","  pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>prompting<span class=\"k\">.</span>builders<span class=\"k\">.</span>CheckBuilder <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>prompting<span class=\"k\">.</span>builders<span class=\"k\">.</span>ToggleButtonBaseBuilder<span class=\"k\">.</span>extend<span class=\"k\">(</span><span class=\"k\">{</span>","    build<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>args<span class=\"k\">)</span> <span class=\"k\">{</span>","      <span class=\"k\">var</span> widget <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>base<span class=\"k\">(</span>args<span class=\"k\">);</span>","      widget<span class=\"k\">.</span>type <span class=\"k\">=</span> <span class=\"s\">'CheckComponent'</span><span class=\"k\">;</span>","      <span class=\"k\">return</span> widget<span class=\"k\">;</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">);</span>","","  pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>prompting<span class=\"k\">.</span>builders<span class=\"k\">.</span>RadioBuilder <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>prompting<span class=\"k\">.</span>builders<span class=\"k\">.</span>ToggleButtonBaseBuilder<span class=\"k\">.</span>extend<span class=\"k\">(</span><span class=\"k\">{</span>","    build<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>args<span class=\"k\">)</span> <span class=\"k\">{</span>","      <span class=\"k\">var</span> widget <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>base<span class=\"k\">(</span>args<span class=\"k\">);</span>","      widget<span class=\"k\">.</span>type <span class=\"k\">=</span> <span class=\"s\">'radio'</span><span class=\"k\">;</span> <span class=\"c\">// Specifically 'radio' instead of 'RadioComponent' because the CoreComponent.js implementation requires it.</span>","      <span class=\"k\">return</span> widget<span class=\"k\">;</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">);</span>","","  pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>prompting<span class=\"k\">.</span>builders<span class=\"k\">.</span>ExternalInputBuilder <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>prompting<span class=\"k\">.</span>builders<span class=\"k\">.</span>ValueBasedParameterWidgetBuilder<span class=\"k\">.</span>extend<span class=\"k\">(</span><span class=\"k\">{</span>","    build<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>args<span class=\"k\">)</span> <span class=\"k\">{</span>","      <span class=\"k\">var</span> formatter <span class=\"k\">=</span> args<span class=\"k\">.</span>promptPanel<span class=\"k\">.</span>createFormatter<span class=\"k\">(</span>args<span class=\"k\">.</span>promptPanel<span class=\"k\">.</span>paramDefn<span class=\"k\">,</span> args<span class=\"k\">.</span>param<span class=\"k\">);</span>","","      <span class=\"k\">return</span> $<span class=\"k\">.</span>extend<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>base<span class=\"k\">(</span>args<span class=\"k\">),</span> <span class=\"k\">{</span>","        type<span class=\"k\">:</span> <span class=\"s\">'ExternalInputComponent'</span><span class=\"k\">,</span>","        transportFormatter<span class=\"k\">:</span> args<span class=\"k\">.</span>promptPanel<span class=\"k\">.</span>createDataTransportFormatter<span class=\"k\">(</span>args<span class=\"k\">.</span>promptPanel<span class=\"k\">.</span>paramDefn<span class=\"k\">,</span> args<span class=\"k\">.</span>param<span class=\"k\">,</span> formatter<span class=\"k\">),</span>","        formatter<span class=\"k\">:</span> formatter<span class=\"k\">,</span>","        promptPanel<span class=\"k\">:</span> args<span class=\"k\">.</span>promptPanel<span class=\"k\">,</span>","        paramDefn<span class=\"k\">:</span> args<span class=\"k\">.</span>promptPanel<span class=\"k\">.</span>paramDefn","      <span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">);</span>","","  pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>prompting<span class=\"k\">.</span>builders<span class=\"k\">.</span>DateInputBuilder <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>prompting<span class=\"k\">.</span>builders<span class=\"k\">.</span>ValueBasedParameterWidgetBuilder<span class=\"k\">.</span>extend<span class=\"k\">(</span><span class=\"k\">{</span>","    build<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>args<span class=\"k\">)</span> <span class=\"k\">{</span>","      <span class=\"k\">var</span> formatter <span class=\"k\">=</span> args<span class=\"k\">.</span>promptPanel<span class=\"k\">.</span>createFormatter<span class=\"k\">(</span>args<span class=\"k\">.</span>promptPanel<span class=\"k\">.</span>paramDefn<span class=\"k\">,</span> args<span class=\"k\">.</span>param<span class=\"k\">);</span>","","      <span class=\"k\">return</span> $<span class=\"k\">.</span>extend<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>base<span class=\"k\">(</span>args<span class=\"k\">),</span> <span class=\"k\">{</span>","        type<span class=\"k\">:</span> <span class=\"s\">'DojoDateTextBoxComponent'</span><span class=\"k\">,</span>","        transportFormatter<span class=\"k\">:</span> args<span class=\"k\">.</span>promptPanel<span class=\"k\">.</span>createDataTransportFormatter<span class=\"k\">(</span>args<span class=\"k\">.</span>promptPanel<span class=\"k\">.</span>paramDefn<span class=\"k\">,</span> args<span class=\"k\">.</span>param<span class=\"k\">,</span> formatter<span class=\"k\">),</span>","        formatter<span class=\"k\">:</span> formatter","      <span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">);</span>","","  pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>prompting<span class=\"k\">.</span>builders<span class=\"k\">.</span>ParameterGroupPanelBuilder <span class=\"k\">=</span> Base<span class=\"k\">.</span>extend<span class=\"k\">(</span><span class=\"k\">{</span>","    lookupPromptType<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>paramDefn<span class=\"k\">)</span> <span class=\"k\">{</span>","      <span class=\"k\">switch</span><span class=\"k\">(</span>paramDefn<span class=\"k\">.</span>layout<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">case</span> <span class=\"s\">'horizontal'</span><span class=\"k\">:</span>","          <span class=\"k\">return</span> <span class=\"s\">'HorizontalTableBasedPromptLayoutComponent'</span><span class=\"k\">;</span>","        <span class=\"k\">case</span> <span class=\"s\">'flow'</span><span class=\"k\">:</span>","          <span class=\"k\">return</span> <span class=\"s\">'FlowPromptLayoutComponent'</span><span class=\"k\">;</span>","        <span class=\"k\">default</span><span class=\"k\">:</span>","          <span class=\"k\">return</span> <span class=\"s\">'VerticalTableBasedPromptLayoutComponent'</span><span class=\"k\">;</span>","      <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    build<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>args<span class=\"k\">)</span> <span class=\"k\">{</span>","      <span class=\"k\">var</span> guid <span class=\"k\">=</span> args<span class=\"k\">.</span>promptPanel<span class=\"k\">.</span>generateWidgetGUID<span class=\"k\">();</span>","      <span class=\"k\">var</span> label <span class=\"k\">=</span> undefined<span class=\"k\">;</span>","","      <span class=\"k\">return</span> <span class=\"k\">{</span>","        type<span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>lookupPromptType<span class=\"k\">(</span>args<span class=\"k\">.</span>promptPanel<span class=\"k\">.</span>paramDefn<span class=\"k\">),</span>","        name<span class=\"k\">:</span> args<span class=\"k\">.</span>paramGroup<span class=\"k\">.</span>name<span class=\"k\">,</span>","        htmlObject<span class=\"k\">:</span> guid<span class=\"k\">,</span>","        promptPanel<span class=\"k\">:</span> args<span class=\"k\">.</span>promptPanel<span class=\"k\">,</span>","        label<span class=\"k\">:</span> label<span class=\"k\">,</span>","        components<span class=\"k\">:</span> args<span class=\"k\">.</span>components<span class=\"k\">,</span>","        cssClass<span class=\"k\">:</span> <span class=\"s\">'parameter-wrapper'</span>","      <span class=\"k\">}</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">);</span>","","  pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>prompting<span class=\"k\">.</span>builders<span class=\"k\">.</span>ParameterPanelBuilder <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>prompting<span class=\"k\">.</span>builders<span class=\"k\">.</span>ParameterWidgetBuilderBase<span class=\"k\">.</span>extend<span class=\"k\">(</span><span class=\"k\">{</span>","    build<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>args<span class=\"k\">)</span> <span class=\"k\">{</span>","      <span class=\"k\">var</span> widget <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>base<span class=\"k\">(</span>args<span class=\"k\">);</span>","      <span class=\"k\">var</span> name <span class=\"k\">=</span>  <span class=\"s\">'panel-'</span> <span class=\"k\">+</span> widget<span class=\"k\">.</span>name<span class=\"k\">;</span>","      <span class=\"k\">return</span> <span class=\"k\">{</span>","        name<span class=\"k\">:</span> name<span class=\"k\">,</span>","        htmlObject<span class=\"k\">:</span> name<span class=\"k\">,</span>","        type<span class=\"k\">:</span> <span class=\"s\">'ParameterPanelComponent'</span><span class=\"k\">,</span>","        executeAtStart<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","        components<span class=\"k\">:</span> args<span class=\"k\">.</span>components<span class=\"k\">,</span>","        param<span class=\"k\">:</span> args<span class=\"k\">.</span>param","      <span class=\"k\">}</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">);</span>","","  pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>prompting<span class=\"k\">.</span>builders<span class=\"k\">.</span>PlainPromptBuilder <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>prompting<span class=\"k\">.</span>builders<span class=\"k\">.</span>ValueBasedParameterWidgetBuilder<span class=\"k\">.</span>extend<span class=\"k\">(</span><span class=\"k\">{</span>","    build<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>args<span class=\"k\">)</span> <span class=\"k\">{</span>","      <span class=\"k\">var</span> formatter <span class=\"k\">=</span> args<span class=\"k\">.</span>promptPanel<span class=\"k\">.</span>createFormatter<span class=\"k\">(</span>args<span class=\"k\">.</span>promptPanel<span class=\"k\">.</span>paramDefn<span class=\"k\">,</span> args<span class=\"k\">.</span>param<span class=\"k\">);</span>","      <span class=\"k\">var</span> transportFormatter <span class=\"k\">=</span> args<span class=\"k\">.</span>promptPanel<span class=\"k\">.</span>createDataTransportFormatter<span class=\"k\">(</span>args<span class=\"k\">.</span>promptPanel<span class=\"k\">.</span>paramDefn<span class=\"k\">,</span> args<span class=\"k\">.</span>param<span class=\"k\">,</span> formatter<span class=\"k\">);</span>","      <span class=\"k\">var</span> convertToAutocompleteValues <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>valuesArray<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> $<span class=\"k\">.</span>map<span class=\"k\">(</span>valuesArray<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>v<span class=\"k\">)</span> <span class=\"k\">{</span>","          <span class=\"k\">var</span> value <span class=\"k\">=</span> formatter <span class=\"k\">?</span> formatter<span class=\"k\">.</span>format<span class=\"k\">(</span>transportFormatter<span class=\"k\">.</span>parse<span class=\"k\">(</span>v<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]))</span> <span class=\"k\">:</span> v<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","          <span class=\"c\">// Label is key if it doesn't exist</span>","          <span class=\"k\">var</span> label <span class=\"k\">=</span> <span class=\"k\">(</span>formatter <span class=\"k\">?</span> formatter<span class=\"k\">.</span>format<span class=\"k\">(</span>transportFormatter<span class=\"k\">.</span>parse<span class=\"k\">(</span>v<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]))</span> <span class=\"k\">:</span> v<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">])</span> <span class=\"k\">||</span> value<span class=\"k\">;</span>","          <span class=\"k\">return</span> <span class=\"k\">{</span>","            value<span class=\"k\">:</span> value<span class=\"k\">,</span>","            label<span class=\"k\">:</span> label","          <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","      <span class=\"k\">}</span><span class=\"k\">;</span>","      <span class=\"k\">var</span> widget <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>base<span class=\"k\">(</span>args<span class=\"k\">);</span>","      <span class=\"k\">return</span> $<span class=\"k\">.</span>extend<span class=\"k\">(</span>widget<span class=\"k\">,</span> <span class=\"k\">{</span>","        type<span class=\"k\">:</span> <span class=\"s\">'StaticAutocompleteBoxComponent'</span><span class=\"k\">,</span>","        valuesArray<span class=\"k\">:</span> convertToAutocompleteValues<span class=\"k\">(</span>widget<span class=\"k\">.</span>valuesArray<span class=\"k\">),</span>","        transportFormatter<span class=\"k\">:</span> transportFormatter<span class=\"k\">,</span>","        formatter<span class=\"k\">:</span> formatter","      <span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">);</span>","","  pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>prompting<span class=\"k\">.</span>builders<span class=\"k\">.</span>TextAreaBuilder <span class=\"k\">=</span> pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>prompting<span class=\"k\">.</span>builders<span class=\"k\">.</span>ValueBasedParameterWidgetBuilder<span class=\"k\">.</span>extend<span class=\"k\">(</span><span class=\"k\">{</span>","    build<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>args<span class=\"k\">)</span> <span class=\"k\">{</span>","      <span class=\"k\">var</span> formatter <span class=\"k\">=</span> args<span class=\"k\">.</span>promptPanel<span class=\"k\">.</span>createFormatter<span class=\"k\">(</span>args<span class=\"k\">.</span>promptPanel<span class=\"k\">.</span>paramDefn<span class=\"k\">,</span> args<span class=\"k\">.</span>param<span class=\"k\">);</span>","      <span class=\"k\">return</span> $<span class=\"k\">.</span>extend<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>base<span class=\"k\">(</span>args<span class=\"k\">),</span> <span class=\"k\">{</span>","        type<span class=\"k\">:</span> <span class=\"s\">'TextAreaComponent'</span><span class=\"k\">,</span>","        transportFormatter<span class=\"k\">:</span> args<span class=\"k\">.</span>promptPanel<span class=\"k\">.</span>createDataTransportFormatter<span class=\"k\">(</span>args<span class=\"k\">.</span>promptPanel<span class=\"k\">.</span>paramDefn<span class=\"k\">,</span> args<span class=\"k\">.</span>param<span class=\"k\">,</span> formatter<span class=\"k\">),</span>","        formatter<span class=\"k\">:</span> formatter","      <span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">);</span>","","  <span class=\"c\">/**</span>","<span class=\"c\">   * Provides a way to execute code within Dashboards' update() loop.</span>","<span class=\"c\">   * This can be useful to clean up old components in the same execution block and prevent</span>","<span class=\"c\">   * and partial rendering from being visible to the user.</span>","<span class=\"c\">   */</span>","  pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>prompting<span class=\"k\">.</span>builders<span class=\"k\">.</span>GarbageCollectorBuilder <span class=\"k\">=</span> Base<span class=\"k\">.</span>extend<span class=\"k\">(</span><span class=\"k\">{</span>","    build<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>args<span class=\"k\">)</span> <span class=\"k\">{</span>","      <span class=\"k\">return</span> <span class=\"k\">{</span>","        type<span class=\"k\">:</span> <span class=\"s\">'BaseComponent'</span><span class=\"k\">,</span>","        name<span class=\"k\">:</span> <span class=\"s\">'gc'</span> <span class=\"k\">+</span> args<span class=\"k\">.</span>promptPanel<span class=\"k\">.</span>generateWidgetGUID<span class=\"k\">(),</span>","        executeAtStart<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","        preExecution<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","          <span class=\"c\">// Clear the components in reverse since we have an exploded list of components.</span>","          <span class=\"c\">// Clearing them in order would empty the parent container thus removing all</span>","          <span class=\"c\">// elements from the dom before each individual component has a chance to clean up</span>","          <span class=\"c\">// after themselves.</span>","          $<span class=\"k\">.</span>each<span class=\"k\">(</span>args<span class=\"k\">.</span>components<span class=\"k\">.</span>reverse<span class=\"k\">(),</span> <span class=\"k\">function</span><span class=\"k\">(</span>i<span class=\"k\">,</span> c<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">try</span> <span class=\"k\">{</span>","              c<span class=\"k\">.</span>clear<span class=\"k\">();</span>","            <span class=\"k\">}</span> <span class=\"k\">catch</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","              Dashboards<span class=\"k\">.</span>log<span class=\"k\">(</span><span class=\"s\">\"Error clearing \"</span> <span class=\"k\">+</span> c<span class=\"k\">.</span>name <span class=\"k\">+</span><span class=\"s\">\":\"</span><span class=\"k\">,</span><span class=\"s\">'error'</span><span class=\"k\">);</span>","              Dashboards<span class=\"k\">.</span>log<span class=\"k\">(</span>e<span class=\"k\">,</span><span class=\"s\">'exception'</span><span class=\"k\">);</span>","            <span class=\"k\">}</span>","          <span class=\"k\">}</span><span class=\"k\">);</span>","          setTimeout<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"c\">// Remove myself from Dashboards.components when we're done updating</span>","            pentaho<span class=\"k\">.</span>common<span class=\"k\">.</span>prompting<span class=\"k\">.</span>removeDashboardComponents<span class=\"k\">([</span><span class=\"k\">this</span><span class=\"k\">]);</span>","          <span class=\"k\">}</span><span class=\"k\">.</span>bind<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">));</span>","          <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span> <span class=\"c\">// Don't try to update, we're done</span>","        <span class=\"k\">}</span>","      <span class=\"k\">}</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">);</span>"];
_$jscoverage['prompting/pentaho-prompting-builders.js'][27]++;
pen.define(["cdf/cdf-module", "common-ui/prompting/pentaho-prompting-bind"], (function () {
  _$jscoverage['prompting/pentaho-prompting-builders.js'][31]++;
  pentaho = (((typeof pentaho) == "undefined")? {}: pentaho);
  _$jscoverage['prompting/pentaho-prompting-builders.js'][32]++;
  pentaho.common = (pentaho.common || {});
  _$jscoverage['prompting/pentaho-prompting-builders.js'][33]++;
  pentaho.common.prompting = (pentaho.common.prompting || {});
  _$jscoverage['prompting/pentaho-prompting-builders.js'][34]++;
  pentaho.common.prompting.builders = (pentaho.common.prompting.builders || {});
  _$jscoverage['prompting/pentaho-prompting-builders.js'][36]++;
  pentaho.common.prompting.builders.PromptPanelBuilder = Base.extend({build: (function (promptPanel) {
  _$jscoverage['prompting/pentaho-prompting-builders.js'][38]++;
  var name = ("prompt" + promptPanel.guid);
  _$jscoverage['prompting/pentaho-prompting-builders.js'][39]++;
  var layout = {name: name, type: "ScrollingPromptPanelLayoutComponent", htmlObject: promptPanel.destinationId, promptPanel: promptPanel, components: promptPanel.buildPanelComponents(), postExecution: (function () {
  _$jscoverage['prompting/pentaho-prompting-builders.js'][46]++;
  promptPanel._ready();
})};
  _$jscoverage['prompting/pentaho-prompting-builders.js'][49]++;
  return layout;
})});
  _$jscoverage['prompting/pentaho-prompting-builders.js'][53]++;
  pentaho.common.prompting.builders.WidgetBuilder = {mapping: {"prompt-panel": "pentaho.common.prompting.builders.PromptPanelBuilder", "group-panel": "pentaho.common.prompting.builders.ParameterGroupPanelBuilder", "parameter-panel": "pentaho.common.prompting.builders.ParameterPanelBuilder", "submit-panel": "pentaho.common.prompting.builders.SubmitPanelBuilder", "submit": "pentaho.common.prompting.builders.SubmitComponentBuilder", "label": "pentaho.common.prompting.builders.LabelBuilder", "error-label": "pentaho.common.prompting.builders.ErrorLabelBuilder", "dropdown": "pentaho.common.prompting.builders.DropDownBuilder", "radio": "pentaho.common.prompting.builders.RadioBuilder", "checkbox": "pentaho.common.prompting.builders.CheckBuilder", "togglebutton": "pentaho.common.prompting.builders.MultiButtonBuilder", "list": "pentaho.common.prompting.builders.ListBuilder", "datepicker": "pentaho.common.prompting.builders.DateInputBuilder", "filebrowser": "pentaho.common.prompting.builders.ExternalInputBuilder", "external-input": "pentaho.common.prompting.builders.ExternalInputBuilder", "multi-line": "pentaho.common.prompting.builders.TextAreaBuilder", "gc": "pentaho.common.prompting.builders.GarbageCollectorBuilder", "default": "pentaho.common.prompting.builders.PlainPromptBuilder"}, cache: {}, findBuilderFor: (function (args, type) {
  _$jscoverage['prompting/pentaho-prompting-builders.js'][78]++;
  type = (type || ((args.param && args.param.attributes)? args.param.attributes["parameter-render-type"]: null));
  _$jscoverage['prompting/pentaho-prompting-builders.js'][79]++;
  return this.createBuilder((this.mapping[type] || this.mapping["default"]));
}), createBuilder: (function (name) {
  _$jscoverage['prompting/pentaho-prompting-builders.js'][83]++;
  var builder = this.cache[name];
  _$jscoverage['prompting/pentaho-prompting-builders.js'][84]++;
  if ((! builder)) {
    _$jscoverage['prompting/pentaho-prompting-builders.js'][85]++;
    try {
      _$jscoverage['prompting/pentaho-prompting-builders.js'][86]++;
      builder = eval(("new " + name + "()"));
      _$jscoverage['prompting/pentaho-prompting-builders.js'][87]++;
      this.cache[name] = builder;
    }
    catch (e) {
      _$jscoverage['prompting/pentaho-prompting-builders.js'][89]++;
      if ((((typeof console) !== "undefined") && console.log)) {
        _$jscoverage['prompting/pentaho-prompting-builders.js'][89]++;
        console.log(("Unable to create widget builder of type \"" + name + "\""));
      }
      _$jscoverage['prompting/pentaho-prompting-builders.js'][90]++;
      throw e;
    }
  }
  _$jscoverage['prompting/pentaho-prompting-builders.js'][93]++;
  return builder;
}), build: (function (args, typeOverride) {
  _$jscoverage['prompting/pentaho-prompting-builders.js'][97]++;
  var widget = this.findBuilderFor(args, typeOverride).build(args);
  _$jscoverage['prompting/pentaho-prompting-builders.js'][98]++;
  if ((widget.parameter && widget.param)) {
    _$jscoverage['prompting/pentaho-prompting-builders.js'][99]++;
    widget.postChange = (function () {
  _$jscoverage['prompting/pentaho-prompting-builders.js'][100]++;
  args.promptPanel.parameterChanged(this.param, this.parameter, this.getValue());
}).bind(widget);
  }
  _$jscoverage['prompting/pentaho-prompting-builders.js'][103]++;
  return widget;
})};
  _$jscoverage['prompting/pentaho-prompting-builders.js'][107]++;
  pentaho.common.prompting.builders.SubmitPanelBuilder = Base.extend({build: (function (args) {
  _$jscoverage['prompting/pentaho-prompting-builders.js'][109]++;
  var guid = args.promptPanel.generateWidgetGUID();
  _$jscoverage['prompting/pentaho-prompting-builders.js'][111]++;
  return ({type: "FlowPromptLayoutComponent", promptType: "submit", name: guid, htmlObject: guid, executeAtStart: true, components: [pentaho.common.prompting.builders.WidgetBuilder.build(args, "submit")]});
})});
  _$jscoverage['prompting/pentaho-prompting-builders.js'][124]++;
  pentaho.common.prompting.builders.SubmitComponentBuilder = Base.extend({build: (function (args) {
  _$jscoverage['prompting/pentaho-prompting-builders.js'][126]++;
  var guid = args.promptPanel.generateWidgetGUID();
  _$jscoverage['prompting/pentaho-prompting-builders.js'][127]++;
  return ({promptType: "submit", type: "SubmitPromptComponent", name: guid, htmlObject: guid, label: args.promptPanel.getString("submitButtonLabel", "Submit"), autoSubmitLabel: args.promptPanel.getString("autoSubmitLabel", "Auto-Submit"), promptPanel: args.promptPanel, paramDefn: args.promptPanel.paramDefn, executeAtStart: true});
})});
  _$jscoverage['prompting/pentaho-prompting-builders.js'][141]++;
  pentaho.common.prompting.builders.ParameterWidgetBuilderBase = Base.extend({build: (function (args) {
  _$jscoverage['prompting/pentaho-prompting-builders.js'][143]++;
  var guid = args.promptPanel.generateWidgetGUID();
  _$jscoverage['prompting/pentaho-prompting-builders.js'][144]++;
  return ({promptType: "prompt", executeAtStart: true, param: args.param, name: guid, htmlObject: guid, type: undefined, parameter: args.promptPanel.getParameterName(args.param), postExecution: (function () {
  _$jscoverage['prompting/pentaho-prompting-builders.js'][153]++;
  this.base();
  _$jscoverage['prompting/pentaho-prompting-builders.js'][154]++;
  var tooltip = this.param.attributes.tooltip;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][155]++;
  if (tooltip) {
    _$jscoverage['prompting/pentaho-prompting-builders.js'][156]++;
    $(("#" + this.htmlObject)).attr("title", tooltip);
  }
})});
})});
  _$jscoverage['prompting/pentaho-prompting-builders.js'][163]++;
  pentaho.common.prompting.builders.LabelBuilder = pentaho.common.prompting.builders.ParameterWidgetBuilderBase.extend({build: (function (args) {
  _$jscoverage['prompting/pentaho-prompting-builders.js'][165]++;
  var widget = this.base(args);
  _$jscoverage['prompting/pentaho-prompting-builders.js'][166]++;
  var name = (widget.name + "-label");
  _$jscoverage['prompting/pentaho-prompting-builders.js'][167]++;
  var label = Dashboards.escapeHtml((args.param.attributes.label || args.param.name));
  _$jscoverage['prompting/pentaho-prompting-builders.js'][168]++;
  $.extend(widget, {promptType: "label", name: name, htmlObject: name, type: "TextComponent", expression: (function () {
  _$jscoverage['prompting/pentaho-prompting-builders.js'][173]++;
  return label;
})});
  _$jscoverage['prompting/pentaho-prompting-builders.js'][175]++;
  (delete widget.parameter);
  _$jscoverage['prompting/pentaho-prompting-builders.js'][176]++;
  return widget;
})});
  _$jscoverage['prompting/pentaho-prompting-builders.js'][180]++;
  pentaho.common.prompting.builders.ErrorLabelBuilder = pentaho.common.prompting.builders.LabelBuilder.extend({build: (function (args) {
  _$jscoverage['prompting/pentaho-prompting-builders.js'][182]++;
  var widget = this.base(args);
  _$jscoverage['prompting/pentaho-prompting-builders.js'][183]++;
  var label = args.errorMessage;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][184]++;
  widget.isErrorIndicator = true;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][185]++;
  widget.expression = (function () {
  _$jscoverage['prompting/pentaho-prompting-builders.js'][185]++;
  return label;
});
  _$jscoverage['prompting/pentaho-prompting-builders.js'][186]++;
  return widget;
})});
  _$jscoverage['prompting/pentaho-prompting-builders.js'][190]++;
  pentaho.common.prompting.builders.TextInputBuilder = pentaho.common.prompting.builders.ParameterWidgetBuilderBase.extend({build: (function (args) {
  _$jscoverage['prompting/pentaho-prompting-builders.js'][192]++;
  var widget = this.base(args);
  _$jscoverage['prompting/pentaho-prompting-builders.js'][193]++;
  return $.extend(widget, {type: "TextInputComponent"});
})});
  _$jscoverage['prompting/pentaho-prompting-builders.js'][199]++;
  pentaho.common.prompting.builders.ValueBasedParameterWidgetBuilder = pentaho.common.prompting.builders.ParameterWidgetBuilderBase.extend({getCDFValuesArray: (function (param) {
  _$jscoverage['prompting/pentaho-prompting-builders.js'][201]++;
  var valuesArray = [];
  _$jscoverage['prompting/pentaho-prompting-builders.js'][202]++;
  $.each(param.values, (function (i, val) {
  _$jscoverage['prompting/pentaho-prompting-builders.js'][203]++;
  valuesArray.push([val.value, val.label]);
}));
  _$jscoverage['prompting/pentaho-prompting-builders.js'][205]++;
  return valuesArray;
}), build: (function (args) {
  _$jscoverage['prompting/pentaho-prompting-builders.js'][209]++;
  var widget = this.base(args);
  _$jscoverage['prompting/pentaho-prompting-builders.js'][210]++;
  return $.extend(widget, {valueAsId: false, valuesArray: this.getCDFValuesArray(args.param)});
})});
  _$jscoverage['prompting/pentaho-prompting-builders.js'][217]++;
  pentaho.common.prompting.builders.DropDownBuilder = pentaho.common.prompting.builders.ValueBasedParameterWidgetBuilder.extend({build: (function (args) {
  _$jscoverage['prompting/pentaho-prompting-builders.js'][219]++;
  var widget = this.base(args);
  _$jscoverage['prompting/pentaho-prompting-builders.js'][221]++;
  if ((args.promptPanel.paramDefn.ignoreBiServer5538 && (! args.param.hasSelection()))) {
    _$jscoverage['prompting/pentaho-prompting-builders.js'][224]++;
    widget.valuesArray = [["", ""]].concat(widget.valuesArray);
  }
  _$jscoverage['prompting/pentaho-prompting-builders.js'][227]++;
  return $.extend(widget, {type: "SelectComponent", preExecution: (function () {
  _$jscoverage['prompting/pentaho-prompting-builders.js'][233]++;
  this.defaultIfEmpty = ((! args.promptPanel.paramDefn.ignoreBiServer5538) && (! args.param.hasSelection()));
})});
})});
  _$jscoverage['prompting/pentaho-prompting-builders.js'][239]++;
  pentaho.common.prompting.builders.ListBuilder = pentaho.common.prompting.builders.ValueBasedParameterWidgetBuilder.extend({build: (function (args) {
  _$jscoverage['prompting/pentaho-prompting-builders.js'][241]++;
  var widget = this.base(args);
  _$jscoverage['prompting/pentaho-prompting-builders.js'][242]++;
  return $.extend(widget, {type: (args.param.multiSelect? "SelectMultiComponent": "SelectComponent"), size: (args.param.attributes["parameter-visible-items"] || 5), changeMode: (args.param.multiSelect? "timeout-focus": "immediate"), preExecution: (function () {
  _$jscoverage['prompting/pentaho-prompting-builders.js'][249]++;
  this.defaultIfEmpty = false;
})});
})});
  _$jscoverage['prompting/pentaho-prompting-builders.js'][255]++;
  pentaho.common.prompting.builders.MultiButtonBuilder = pentaho.common.prompting.builders.ValueBasedParameterWidgetBuilder.extend({build: (function (args) {
  _$jscoverage['prompting/pentaho-prompting-builders.js'][257]++;
  var widget = this.base(args);
  _$jscoverage['prompting/pentaho-prompting-builders.js'][258]++;
  return $.extend(widget, {type: "MultiButtonComponent", isMultiple: args.param.multiSelect, verticalOrientation: ("vertical" === args.param.attributes["parameter-layout"]), expression: (function () {
  _$jscoverage['prompting/pentaho-prompting-builders.js'][263]++;
  return Dashboards.getParameterValue(this.parameter);
}), postExecution: (function () {
  _$jscoverage['prompting/pentaho-prompting-builders.js'][266]++;
  $(("#" + this.htmlObject)).addClass("pentaho-toggle-button-container");
})});
})});
  _$jscoverage['prompting/pentaho-prompting-builders.js'][272]++;
  pentaho.common.prompting.builders.ToggleButtonBaseBuilder = pentaho.common.prompting.builders.ValueBasedParameterWidgetBuilder.extend({build: (function (args) {
  _$jscoverage['prompting/pentaho-prompting-builders.js'][274]++;
  var widget = this.base(args);
  _$jscoverage['prompting/pentaho-prompting-builders.js'][275]++;
  return $.extend(widget, {defaultIfEmpty: false, verticalOrientation: ("vertical" == args.param.attributes["parameter-layout"])});
})});
  _$jscoverage['prompting/pentaho-prompting-builders.js'][282]++;
  pentaho.common.prompting.builders.CheckBuilder = pentaho.common.prompting.builders.ToggleButtonBaseBuilder.extend({build: (function (args) {
  _$jscoverage['prompting/pentaho-prompting-builders.js'][284]++;
  var widget = this.base(args);
  _$jscoverage['prompting/pentaho-prompting-builders.js'][285]++;
  widget.type = "CheckComponent";
  _$jscoverage['prompting/pentaho-prompting-builders.js'][286]++;
  return widget;
})});
  _$jscoverage['prompting/pentaho-prompting-builders.js'][290]++;
  pentaho.common.prompting.builders.RadioBuilder = pentaho.common.prompting.builders.ToggleButtonBaseBuilder.extend({build: (function (args) {
  _$jscoverage['prompting/pentaho-prompting-builders.js'][292]++;
  var widget = this.base(args);
  _$jscoverage['prompting/pentaho-prompting-builders.js'][293]++;
  widget.type = "radio";
  _$jscoverage['prompting/pentaho-prompting-builders.js'][294]++;
  return widget;
})});
  _$jscoverage['prompting/pentaho-prompting-builders.js'][298]++;
  pentaho.common.prompting.builders.ExternalInputBuilder = pentaho.common.prompting.builders.ValueBasedParameterWidgetBuilder.extend({build: (function (args) {
  _$jscoverage['prompting/pentaho-prompting-builders.js'][300]++;
  var formatter = args.promptPanel.createFormatter(args.promptPanel.paramDefn, args.param);
  _$jscoverage['prompting/pentaho-prompting-builders.js'][302]++;
  return $.extend(this.base(args), {type: "ExternalInputComponent", transportFormatter: args.promptPanel.createDataTransportFormatter(args.promptPanel.paramDefn, args.param, formatter), formatter: formatter, promptPanel: args.promptPanel, paramDefn: args.promptPanel.paramDefn});
})});
  _$jscoverage['prompting/pentaho-prompting-builders.js'][312]++;
  pentaho.common.prompting.builders.DateInputBuilder = pentaho.common.prompting.builders.ValueBasedParameterWidgetBuilder.extend({build: (function (args) {
  _$jscoverage['prompting/pentaho-prompting-builders.js'][314]++;
  var formatter = args.promptPanel.createFormatter(args.promptPanel.paramDefn, args.param);
  _$jscoverage['prompting/pentaho-prompting-builders.js'][316]++;
  return $.extend(this.base(args), {type: "DojoDateTextBoxComponent", transportFormatter: args.promptPanel.createDataTransportFormatter(args.promptPanel.paramDefn, args.param, formatter), formatter: formatter});
})});
  _$jscoverage['prompting/pentaho-prompting-builders.js'][324]++;
  pentaho.common.prompting.builders.ParameterGroupPanelBuilder = Base.extend({lookupPromptType: (function (paramDefn) {
  _$jscoverage['prompting/pentaho-prompting-builders.js'][326]++;
  switch (paramDefn.layout) {
  case "horizontal":
    _$jscoverage['prompting/pentaho-prompting-builders.js'][328]++;
    return "HorizontalTableBasedPromptLayoutComponent";
  case "flow":
    _$jscoverage['prompting/pentaho-prompting-builders.js'][330]++;
    return "FlowPromptLayoutComponent";
  default:
    _$jscoverage['prompting/pentaho-prompting-builders.js'][332]++;
    return "VerticalTableBasedPromptLayoutComponent";
  }
}), build: (function (args) {
  _$jscoverage['prompting/pentaho-prompting-builders.js'][337]++;
  var guid = args.promptPanel.generateWidgetGUID();
  _$jscoverage['prompting/pentaho-prompting-builders.js'][338]++;
  var label = undefined;
  _$jscoverage['prompting/pentaho-prompting-builders.js'][340]++;
  return ({type: this.lookupPromptType(args.promptPanel.paramDefn), name: args.paramGroup.name, htmlObject: guid, promptPanel: args.promptPanel, label: label, components: args.components, cssClass: "parameter-wrapper"});
})});
  _$jscoverage['prompting/pentaho-prompting-builders.js'][352]++;
  pentaho.common.prompting.builders.ParameterPanelBuilder = pentaho.common.prompting.builders.ParameterWidgetBuilderBase.extend({build: (function (args) {
  _$jscoverage['prompting/pentaho-prompting-builders.js'][354]++;
  var widget = this.base(args);
  _$jscoverage['prompting/pentaho-prompting-builders.js'][355]++;
  var name = ("panel-" + widget.name);
  _$jscoverage['prompting/pentaho-prompting-builders.js'][356]++;
  return ({name: name, htmlObject: name, type: "ParameterPanelComponent", executeAtStart: true, components: args.components, param: args.param});
})});
  _$jscoverage['prompting/pentaho-prompting-builders.js'][367]++;
  pentaho.common.prompting.builders.PlainPromptBuilder = pentaho.common.prompting.builders.ValueBasedParameterWidgetBuilder.extend({build: (function (args) {
  _$jscoverage['prompting/pentaho-prompting-builders.js'][369]++;
  var formatter = args.promptPanel.createFormatter(args.promptPanel.paramDefn, args.param);
  _$jscoverage['prompting/pentaho-prompting-builders.js'][370]++;
  var transportFormatter = args.promptPanel.createDataTransportFormatter(args.promptPanel.paramDefn, args.param, formatter);
  _$jscoverage['prompting/pentaho-prompting-builders.js'][371]++;
  var convertToAutocompleteValues = (function (valuesArray) {
  _$jscoverage['prompting/pentaho-prompting-builders.js'][372]++;
  return $.map(valuesArray, (function (v) {
  _$jscoverage['prompting/pentaho-prompting-builders.js'][373]++;
  var value = (formatter? formatter.format(transportFormatter.parse(v[0])): v[0]);
  _$jscoverage['prompting/pentaho-prompting-builders.js'][375]++;
  var label = ((formatter? formatter.format(transportFormatter.parse(v[1])): v[1]) || value);
  _$jscoverage['prompting/pentaho-prompting-builders.js'][376]++;
  return ({value: value, label: label});
}));
});
  _$jscoverage['prompting/pentaho-prompting-builders.js'][382]++;
  var widget = this.base(args);
  _$jscoverage['prompting/pentaho-prompting-builders.js'][383]++;
  return $.extend(widget, {type: "StaticAutocompleteBoxComponent", valuesArray: convertToAutocompleteValues(widget.valuesArray), transportFormatter: transportFormatter, formatter: formatter});
})});
  _$jscoverage['prompting/pentaho-prompting-builders.js'][392]++;
  pentaho.common.prompting.builders.TextAreaBuilder = pentaho.common.prompting.builders.ValueBasedParameterWidgetBuilder.extend({build: (function (args) {
  _$jscoverage['prompting/pentaho-prompting-builders.js'][394]++;
  var formatter = args.promptPanel.createFormatter(args.promptPanel.paramDefn, args.param);
  _$jscoverage['prompting/pentaho-prompting-builders.js'][395]++;
  return $.extend(this.base(args), {type: "TextAreaComponent", transportFormatter: args.promptPanel.createDataTransportFormatter(args.promptPanel.paramDefn, args.param, formatter), formatter: formatter});
})});
  _$jscoverage['prompting/pentaho-prompting-builders.js'][408]++;
  pentaho.common.prompting.builders.GarbageCollectorBuilder = Base.extend({build: (function (args) {
  _$jscoverage['prompting/pentaho-prompting-builders.js'][410]++;
  return ({type: "BaseComponent", name: ("gc" + args.promptPanel.generateWidgetGUID()), executeAtStart: true, preExecution: (function () {
  _$jscoverage['prompting/pentaho-prompting-builders.js'][419]++;
  $.each(args.components.reverse(), (function (i, c) {
  _$jscoverage['prompting/pentaho-prompting-builders.js'][420]++;
  try {
    _$jscoverage['prompting/pentaho-prompting-builders.js'][421]++;
    c.clear();
  }
  catch (e) {
    _$jscoverage['prompting/pentaho-prompting-builders.js'][423]++;
    Dashboards.log(("Error clearing " + c.name + ":"), "error");
    _$jscoverage['prompting/pentaho-prompting-builders.js'][424]++;
    Dashboards.log(e, "exception");
  }
}));
  _$jscoverage['prompting/pentaho-prompting-builders.js'][427]++;
  setTimeout((function () {
  _$jscoverage['prompting/pentaho-prompting-builders.js'][429]++;
  pentaho.common.prompting.removeDashboardComponents([this]);
}).bind(this));
  _$jscoverage['prompting/pentaho-prompting-builders.js'][431]++;
  return false;
})});
})});
}));
